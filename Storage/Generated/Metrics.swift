// -*- mode: Swift -*-

// AUTOGENERATED BY glean_parser v7.2.1. DO NOT EDIT. DO NOT COMMIT.

#if canImport(Foundation)
    import Foundation
#endif

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


import Glean

// swiftlint:disable superfluous_disable_command
// swiftlint:disable nesting
// swiftlint:disable line_length
// swiftlint:disable identifier_name
// swiftlint:disable force_try

extension GleanMetrics {
    class GleanBuild {
        private init() {
            // Intentionally left private, no external user can instantiate a new global object.
        }

        public static let info = BuildInfo(buildDate: DateComponents(calendar: Calendar.current, timeZone: TimeZone(abbreviation: "UTC"), year: 2024, month: 1, day: 25, hour: 17, minute: 30, second: 38))
    }

    enum History {
        /// The number of visits in a User's history database
        static let numVisits = QuantityMetricType( // generated from history.num_visits
            CommonMetricData(
                category: "history",
                name: "num_visits",
                sendInPings: ["metrics"],
                lifetime: .ping,
                disabled: false
            )
        )

    }

    enum LoginsStoreKeyRegeneration {
        /// The encryption key was regenerated because it didn't match the encrypted data
        static let corrupt = EventMetricType<NoExtras>( // generated from logins_store_key_regeneration.corrupt
            CommonMetricData(
                category: "logins_store_key_regeneration",
                name: "corrupt",
                sendInPings: ["events"],
                lifetime: .ping,
                disabled: false
            )
            , []
        )

        /// The encryption key was regenerated because it was lost
        static let lost = EventMetricType<NoExtras>( // generated from logins_store_key_regeneration.lost
            CommonMetricData(
                category: "logins_store_key_regeneration",
                name: "lost",
                sendInPings: ["events"],
                lifetime: .ping,
                disabled: false
            )
            , []
        )

        /// The encryption key was regenerated for an unknown reason
        static let other = EventMetricType<NoExtras>( // generated from logins_store_key_regeneration.other
            CommonMetricData(
                category: "logins_store_key_regeneration",
                name: "other",
                sendInPings: ["events"],
                lifetime: .ping,
                disabled: false
            )
            , []
        )

    }

}
